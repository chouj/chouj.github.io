<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>matlab on 抽筋儿的话语权</title>
    <link>https://chouj.github.io/tags/matlab/</link>
    <description>Recent content in matlab on 抽筋儿的话语权</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Fri, 19 Jul 2019 10:30:04 +0800</lastBuildDate>
    
	<atom:link href="https://chouj.github.io/tags/matlab/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>今日南海中尺度涡 (South China Sea Mesoscale Eddies Today)</title>
      <link>https://chouj.github.io/scs-eddies-today/</link>
      <pubDate>Fri, 19 Jul 2019 10:30:04 +0800</pubDate>
      
      <guid>https://chouj.github.io/scs-eddies-today/</guid>
      <description>南海地形（颜色）叠加SSHA等值线（黑实为正，黑虚为负，间隔为2 cm）。洋红色闭合等值线标示反气旋涡，翠绿色闭合等值线标示气旋涡。
SSHA分布（颜色，间隔为1 cm）叠加绝对地转流矢量箭头。灰色细线标识南海等深线（同上图）。粗黑实线标示反气旋涡，粗黑虚线标示气旋涡。
项目功能 当天卫星资料自动下载至本地； 中尺度涡识别（基于SSHA闭合等值线，输出形心坐标、极值点坐标、涡振幅、涡边缘坐标、涡极性、涡等效半径）； 制图（目前如上两种）； 基于Git作线上更新发布（码云）； 自动每日定期执行（大概8:20发）； SSTA图、CHL图等（CMEMS能自动下载的都可以画）； 代码开源； 基于码云的webhook when push和pushbear，实现项目更新通知并推送至微信。  数据来源 GLOBAL OCEAN GRIDDED L4 SEA SURFACE HEIGHTS AND DERIVED VARIABLES NRT
数据手册 涡识别判据 最大SSHA闭合等值线 圈定范围内SSHA极值与该最大SSHA闭合等值线上值的差不小于3 cm 圈定范围经向纬向跨度至少0.5度 最大SSHA闭合等值线上的点与线上其它所有点的距离不超过400 Km  注意事项  涡识别前SLA数据未做任何处理：比如，未空间滤波。 SLA原始数据所去除的多年平均是1993-2012年。  致谢  上海海洋气象台 杨棋 （涡识别核心code） CMEMS MOTU Client for handling, extracting and transforming oceanographic huge volumes of data 地形：Sandwell and Smith Bathymetry 岸界：GSHHS M_MAP、export_fig 码云   项目动机 近期有一个利用水下滑翔机观测中尺度涡的应用型海试，我一直在帮忙做观测方案设计。这期间每天必做的就是下载当天的准实时海表面高度异常资料，进行初步涡识别，然后成图 ，发给执行方供参考。为了节省这部分重复劳动占用的时间，我把整个过程在本地自动化（借助timer function），然后在码云代码仓库作自动线上发布与更新。</description>
    </item>
    
    <item>
      <title>用MATLAB实现便便时间间隔的定期统计分析</title>
      <link>https://chouj.github.io/792/</link>
      <pubDate>Fri, 19 Jan 2018 09:15:41 +0000</pubDate>
      
      <guid>https://chouj.github.io/792/</guid>
      <description>&lt;p&gt;为了达成如题的目的，实现方法已经有了早期的两个版本：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2014年：手机端手动输入便便时间，经Dropbox同步至本地PC；利用Windows计划任务定期执行统计分析的&lt;a href=&#34;https://xuchi.name/tag/matlab/&#34;&gt;MATLAB&lt;/a&gt;脚本；将结果发邮箱，再利用IFTTT发Twitter上。(见&lt;a href=&#34;https://github.com/chouj/PooAnalysis&#34;&gt;Github&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;2017年3月：应对Dropbox被墙，将便便时间记录放到&lt;a href=&#34;http://notepad.live&#34;&gt;Notepad&lt;/a&gt;上；&lt;a href=&#34;https://xuchi.name/tag/matlab/&#34;&gt;MATLAB&lt;/a&gt;里利用正则把页面上的数据读下来，再进行统计分析；同样用Windows计划任务实现定期执行。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上述两个方案中最难坚持的部分在于：要打开手机浏览器，访问相应记录网页，再按10个数字手动输入便便时间。&lt;/p&gt;

&lt;p&gt;去年10月搞定了&lt;strong&gt;第三版实现方法&lt;/strong&gt;，借助Thingspeak数据上载的timestamp，完美回避手动输入时间数据；同时脚本执行也丢去了Thingspeak；分析结果推送则通过IFTTT的webhooks发至Telegram；Thingspeak还具备利用数据作图的功能。具体如下：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Call Bitly/Google URL shorten API in MATLAB</title>
      <link>https://chouj.github.io/824/</link>
      <pubDate>Fri, 19 Jan 2018 08:31:50 +0000</pubDate>
      
      <guid>https://chouj.github.io/824/</guid>
      <description>&lt;h1 id=&#34;bitly&#34;&gt;Bitly&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://dev.bitly.com/links.html#v3_shorten&#34;&gt;Bitly API document: &lt;strong&gt;/v3/shorten&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Matlab code:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>利用MATLAB的Timer实现网络图片的定时下载</title>
      <link>https://chouj.github.io/817/</link>
      <pubDate>Fri, 22 Sep 2017 09:09:31 +0000</pubDate>
      
      <guid>https://chouj.github.io/817/</guid>
      <description>&lt;p&gt;利用MATLAB的Timer实现网络图片定时下载的一个个例:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何推广Telegram频道</title>
      <link>https://chouj.github.io/798/</link>
      <pubDate>Tue, 12 Sep 2017 03:41:44 +0000</pubDate>
      
      <guid>https://chouj.github.io/798/</guid>
      <description>&lt;p&gt;新建立了一个&lt;strong&gt;&lt;a href=&#34;https://t.me/matlab_tips&#34; target=&#34;_blank&#34;&gt;MATLAB TIPS的Telegram频道&lt;/a&gt;&lt;/strong&gt;，欢迎加入。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/xml.svg?color=yellow&amp;amp;label=t.me/matlab_tips&amp;amp;query=%2F%2Fchannel%2Ffeeds%2Ffeed%2Ffield2&amp;amp;url=https%3A%2F%2Fapi.thingspeak.com%2Fchannels%2F343156%2Ffeeds.xml%3Fresults%3D1&amp;amp;suffix=%20subscribers&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;目前：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;po了好些自己以前用到的现成脚本、函数，或前人写的技巧、教程、文档上去；&lt;/li&gt;
&lt;li&gt;基于RSS自动发布一些&lt;a href=&#34;https://telegra.ph/%E6%9C%AC%E9%A2%91%E9%81%93%E5%B7%B2%E8%AE%A2%E9%98%85%E7%9A%84feeds-09-09&#34; target=&#34;_blank&#34;&gt;Matlab相关博客的最新日志链接&lt;/a&gt;；&lt;/li&gt;
&lt;li&gt;欢迎作管理员共同打理，只要顺手把自己用上的网页url发上来就好。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;建好后就经历了到处发小广告做宣传的过程，在此总结一番：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Matlab：如何以线上点的颜色表示强度</title>
      <link>https://chouj.github.io/307/</link>
      <pubDate>Sun, 07 Sep 2008 09:03:45 +0000</pubDate>
      
      <guid>https://chouj.github.io/307/</guid>
      <description>Matlab是一款极其好用的数学计算绘图软件。在科研用图绘制功能中，最常见的即为绘制等值线图，这也是一般同学们都掌握的。大家都知道，二维填充等值线图的coutourf(X,Y,Z,n)中，Z=f(X,Y)是一个矩阵，代表X,Y平面上的每一个点对应的值，颜色则表示该值的高低。也就是说，用这个画出来的是一个彩色的面，比如：
但是，如果Z是一维向量呢？如果我们手上就只有某些X,Y对应的Z值，也不能虚构其他的点值来添进，这时候我们想表示强度怎么办呢？用Plot3吗？没错Plot3确实可以，但3维图并不是很容易识别的。如果想以颜色表示该点某物理量的强度，那又怎么画呢？
本文就来告诉你，怎么实现点线中用点的颜色表示强度。科研中是会出现这种需要的，比方画卫星轨道、走航轨迹上一些诸如海表面高度、气溶胶浓度之类参量的时候。.
比方我们有三个一维向量：lon,lat,ssha,分别代表卫星高度计数据中的经度(microdegree)、纬度(microdegree)、海表面高度距平(cm)。用matlab散点图命令scatter即可达到我们的目的。命令格式是：
 scatter(X,Y,,,&amp;rsquo;&amp;#8217;);
 &amp;#8211; 点的大小控制，设为和X，Y同长度一维向量，则值决定点的大小；设为常数或缺省，则所有点大小统一。
 &amp;#8211; 点的颜色控制，设为和X，Y同长度一维向量，则色彩由值大小线性分布；设为和X，Y同长度三维向量，则按colormap RGB值定义每点颜色，[0,0,0]是黑色，[1,1,1]是白色。缺省则颜色统一。
 &amp;#8211; 点型：可选filled指代填充，缺省则画出的是空心圈。
 这样，我们就可以得到以经纬度点的颜色表示海表面高度距平的图，使用命令：
   scatter(lon,lat,3,ssha);
   得到图如下：
似乎不是特别直观，那么我们再利用m_map地图工具，将陆地绘制上。此时要注意以下几点：
 m_map中经纬以十进制数目表示，不是度分秒形式，且东经为正，西经为负。数据的经纬度一定要符合此形式。 m_map中投影地图的坐标并不是实际经纬，需要以m_ll2xy.m（就是longitude &amp;amp; latitude to x-y coordinates）将数据中的经纬转化为投影地图中可用的坐标。例如：&amp;gt;&amp;gt;[X,Y]=m_ll2xy(lon,lat);  命令实例：
   hold on
m_proj(&amp;#8216;miller&amp;#8217;,&amp;#8217;lon&amp;#8217;,[0 250],&amp;#8217;lat&amp;#8217;,[-80 80]); % 设置投影、经纬
m_coast(&amp;#8216;patch&amp;#8217;,[.7 .7 .7],&amp;#8217;edgecolor&amp;#8217;,&amp;#8217;none&amp;#8217;); % 画岸界，填充大陆
m_grid(&amp;#8216;xlabeldir&amp;#8217;,&amp;#8217;end&amp;#8217;,&amp;#8217;fontsize&amp;#8217;,10); % 显示网格，并显示label
scatter(lon,lat,3,ssha);
   得图：
[教程完]其实很简单，但网络上关于这类画法的指导基本没有，所以稍稍写下，望能帮助到需要的人。</description>
    </item>
    
  </channel>
</rss>